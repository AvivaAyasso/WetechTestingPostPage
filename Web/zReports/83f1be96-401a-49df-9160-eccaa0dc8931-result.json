{"name": "test_upload_image_with_text[True]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[contains(text(),\"just now\")]\"}\n  (Session info: chrome=101.0.4951.54)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00B0B8F3+2406643]\n\tOrdinal0 [0x00A9AF31+1945393]\n\tOrdinal0 [0x0098C748+837448]\n\tOrdinal0 [0x009B92E0+1020640]\n\tOrdinal0 [0x009B957B+1021307]\n\tOrdinal0 [0x009E6372+1205106]\n\tOrdinal0 [0x009D42C4+1131204]\n\tOrdinal0 [0x009E4682+1197698]\n\tOrdinal0 [0x009D4096+1130646]\n\tOrdinal0 [0x009AE636+976438]\n\tOrdinal0 [0x009AF546+980294]\n\tGetHandleVerifier [0x00D79612+2498066]\n\tGetHandleVerifier [0x00D6C920+2445600]\n\tGetHandleVerifier [0x00BA4F2A+579370]\n\tGetHandleVerifier [0x00BA3D36+574774]\n\tOrdinal0 [0x00AA1C0B+1973259]\n\tOrdinal0 [0x00AA6688+1992328]\n\tOrdinal0 [0x00AA6775+1992565]\n\tOrdinal0 [0x00AAF8D1+2029777]\n\tBaseThreadInitThunk [0x75C3FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x76FF7A7E+286]\n\tRtlGetAppContainerNamedObjectPath [0x76FF7A4E+238]", "trace": "self = <Tests.Uploadtest.TestUpLoad object at 0x000002A99CA871C0>\n\n    def test_upload_image_with_text(self):\n        driver = self.driver\n        upload = UpLoadPage(driver)\n        upload.image_selection()\n        upload.enterText(\"Today is Monday\")\n        upload.share()\n>       upload.validation(driver,UploadLocators.when_upload,\"just now\")\n\nUploadtest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\UpLoadPage.py:53: in validation\n    valid = driver.find_element(By.XPATH, locator).get_attribute(\"textContent\")\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1251: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:430: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002A99D42BD00>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FF7A7E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FF7A4E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[contains(text(),\"just now\")]\"}\nE         (Session info: chrome=101.0.4951.54)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00B0B8F3+2406643]\nE       \tOrdinal0 [0x00A9AF31+1945393]\nE       \tOrdinal0 [0x0098C748+837448]\nE       \tOrdinal0 [0x009B92E0+1020640]\nE       \tOrdinal0 [0x009B957B+1021307]\nE       \tOrdinal0 [0x009E6372+1205106]\nE       \tOrdinal0 [0x009D42C4+1131204]\nE       \tOrdinal0 [0x009E4682+1197698]\nE       \tOrdinal0 [0x009D4096+1130646]\nE       \tOrdinal0 [0x009AE636+976438]\nE       \tOrdinal0 [0x009AF546+980294]\nE       \tGetHandleVerifier [0x00D79612+2498066]\nE       \tGetHandleVerifier [0x00D6C920+2445600]\nE       \tGetHandleVerifier [0x00BA4F2A+579370]\nE       \tGetHandleVerifier [0x00BA3D36+574774]\nE       \tOrdinal0 [0x00AA1C0B+1973259]\nE       \tOrdinal0 [0x00AA6688+1992328]\nE       \tOrdinal0 [0x00AA6775+1992565]\nE       \tOrdinal0 [0x00AAF8D1+2029777]\nE       \tBaseThreadInitThunk [0x75C3FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x76FF7A7E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x76FF7A4E+238]\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException"}, "steps": [{"name": "image_selection", "status": "passed", "start": 1652615634168, "stop": 1652615650890}, {"name": "enterText", "status": "passed", "parameters": [{"name": "text", "value": "'Today is Monday'"}], "start": 1652615650890, "stop": 1652615656103}, {"name": "share", "status": "passed", "start": 1652615656103, "stop": 1652615656172}], "attachments": [{"name": "log", "source": "1283e8d0-6946-4880-9384-ebc061381623-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "62ec7f44-9a44-408e-abd0-e8fa823f9950-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "6afdde34-f661-4161-9143-9b21c56267ea-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "details", "value": "True"}], "start": 1652615634167, "stop": 1652615656186, "uuid": "d1513ac5-e56d-472f-a9b3-957deefa706c", "historyId": "8e688d6350b10c4c7709430d8226470f", "testCaseId": "fe56cd89100ce1a439f5eb7b203aab55", "fullName": "Uploadtest.TestUpLoad#test_upload_image_with_text", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setUp')"}, {"name": "suite", "value": "Uploadtest"}, {"name": "subSuite", "value": "TestUpLoad"}, {"name": "host", "value": "LAPTOP-TL4BCLLG"}, {"name": "thread", "value": "26128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Uploadtest"}]}